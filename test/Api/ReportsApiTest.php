<?php
/**
 * ReportsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  ChronoSheetsClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ChronoSheets API
 *
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace ChronoSheetsClient;

use \ChronoSheetsClient\Configuration;
use \ChronoSheetsClient\ApiException;
use \ChronoSheetsClient\ObjectSerializer;

/**
 * ReportsApiTest Class Doc Comment
 *
 * @category Class
 * @package  ChronoSheetsClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ReportsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for reportsGetAllChartsDataAdmin
     *
     * Get Consolidated Admin Reports Data (Jobs, Tasks, Clients and Projects).  These are the organisation wide reports, with data from potentially all employees.    Requires the 'ReportAdmin' permission..
     *
     */
    public function testReportsGetAllChartsDataAdmin()
    {
    }

    /**
     * Test case for reportsGetAllChartsDataUser
     *
     * Get Consolidated User Reports Data (Jobs, Tasks, Clients and Projects).  These are the user's own reports.    Requires the 'ViewOwnReports' permission..
     *
     */
    public function testReportsGetAllChartsDataUser()
    {
    }

    /**
     * Test case for reportsGetOrgTripById
     *
     * Get trip by Id, for reporting purposes.    Requires the 'ReportAdmin' permission..
     *
     */
    public function testReportsGetOrgTripById()
    {
    }

    /**
     * Test case for reportsGetOrganisationTimesheetFileAttachments
     *
     * Reports on Organisation timesheet file attachments (files uploaded and attached to timesheet records.    Requires the 'ReportAdmin' permission..
     *
     */
    public function testReportsGetOrganisationTimesheetFileAttachments()
    {
    }

    /**
     * Test case for reportsGetOrganisationTrips
     *
     * Reports on Organisation trips (GPS tracking from whole organisation).    Requires the 'ReportAdmin' permission..
     *
     */
    public function testReportsGetOrganisationTrips()
    {
    }

    /**
     * Test case for reportsGetRawDataAdmin
     *
     * Get Timesheets Raw Data.  This data details each timesheet record.  These are the organisation wide timesheet records, with data from potentially all employees.    Requires the 'ReportAdmin' permission..
     *
     */
    public function testReportsGetRawDataAdmin()
    {
    }

    /**
     * Test case for reportsProjectCostingsAdmin
     *
     * Gets project cost estimations VS actual cost for date range and users.    Requires the 'ReportAdmin' permission..
     *
     */
    public function testReportsProjectCostingsAdmin()
    {
    }

    /**
     * Test case for reportsUserJobsOverTime
     *
     * Timeseries jobs data for the logged in user.    Requires the 'ViewOwnReports' or 'SubmitTimesheets'..
     *
     */
    public function testReportsUserJobsOverTime()
    {
    }
}
